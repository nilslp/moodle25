<?php

require_once('../../../config.php');
global $CFG,$PAGE;
require_once($CFG->libdir.'/datalib.php');
require_once('../lib.php');

// catch warnings etc and expunge them!
ob_start();

$PAGE->set_context(context_system::instance());

$id         = optional_param('id', 0,PARAM_INT);
$sid        = optional_param('sid', 0, PARAM_INT);
$spage      = optional_param('spage', 0, PARAM_INT);                    
$perpage    = optional_param('perpage', 20, PARAM_INT);              
$sort       = optional_param('sort', '', PARAM_TEXT);            
$sortdir    = optional_param('sortdir', 'ASC', PARAM_TEXT);

$results = array();

header('Content-type: application/json');
ob_flush();

if (empty($id)) {
    $results['success'] = false;
    $results['message'] = get_string('error:invalidreportid','block_lp_reportbuilder');
    ob_clean();
    ob_end_clean();
    echo json_encode($results);
    die;
}

// Saved ID should be ignored -- the session variable already contains the applied filters
$sid = null;

$report = new reportbuilder($id, null, false, $sid);
if (!$report->is_capable($id)) {
    $results['success'] = false;
    $results['message'] = get_string('nopermission','block_lp_reportbuilder');
    ob_clean();
    ob_end_clean();
    echo json_encode($results);
    die;
}

// populate the results
$results = $report->get_report_json($spage, $perpage, $sort, $sortdir);

// any warnings or debug info generated by previous functions will now be washed away ...
ob_clean();
ob_end_clean();

// output some nice clean json
echo json_encode($results);

die;

